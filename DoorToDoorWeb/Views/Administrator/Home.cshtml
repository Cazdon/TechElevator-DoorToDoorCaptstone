@section Title {Home - Admin}
@section NavBar {
    <partial name="~/Views/Administrator/Partials/AdminNavBar.cshtml" />
}
@section Scripts {
    <script src="~/js/adminRegisterManager.js"></script>
    <script src="~/js/site.js"></script>
}
@model AdminManagerListViewModel
@using DoorToDoorLibrary.DatabaseObjects

    <div class="container">
        <div id="show-hide-form" class="show-hide-button">Show Create Manager Form</div>
        <form asp-controller="Administrator" asp-action="RegisterManager" method="post" id="admin-create-manager">
            <div class="form-group">
                <label asp-for="Register.FirstName"></label>
                <input asp-for="Register.FirstName" type="text" />
                <span asp-validation-for="Register.FirstName"></span>
            </div>
            <div class="form-group">
                <label asp-for="Register.LastName"></label>
                <input asp-for="Register.LastName" type="text" />
                <span asp-validation-for="Register.LastName"></span>
            </div>
            <div class="form-group">
                <label asp-for="Register.EmailAddress"></label>
                <input asp-for="Register.EmailAddress" type="email" />
                <span asp-validation-for="Register.EmailAddress"></span>
            </div>
            <div class="form-group">
                <label asp-for="Register.Password"></label>
                <input asp-for="Register.Password" type="password" />
                <span asp-validation-for="Register.Password"></span>
            </div>
            <div class="form-group">
                <label asp-for="Register.ConfirmPassword"></label>
                <input asp-for="Register.ConfirmPassword" type="password" />
                <span asp-validation-for="Register.ConfirmPassword"></span>
            </div>
            <div class="form-group">
                <button>Create Manager</button>
                <span>
                    @Html.ValidationMessage("invalid", new { @class = "field-validation-error" })
                </span>
            </div>
        </form>
        <h2>Registered Managers:</h2>
        <div class="container">
            <span>
                @Html.ValidationMessage("resetFailed", new { @class = "field-validation-error" })
            </span>
            @if ((TempData["resetSuccess"] != null) && ((bool)TempData["resetSuccess"]))
            {
                <span id="reset-success">Reset Password flag successfully set!</span>
            }
        </div>

        <div class="container">
            <ul id="admin-manager-list">
                <li class="manager-list-item">
                    <div class="manager-list-first-name">First Name</div>
                    <div class="manager-list-last-name">Last Name</div>
                    <div class="manager-list-email">Email Addresss</div>
                </li>
                @{
                    foreach (UserItem user in Model.Managers)
                    {
                        <li class="manager-list-item">
                            <div class="manager-list-first-name">@(user.FirstName)</div>
                            <div class="manager-list-last-name">@(user.LastName)</div>
                            <div class="manager-list-email">@(user.EmailAddress)</div>
                            <form asp-controller="Administrator" asp-action="ResetPassword" method="post" id="admin-update-password-form@(user.Id)" class="manager-list-reset">
                                <input type="hidden" value="@(user.Id)" name="userID" />
                                <button class="reset-password-button">Reset Password</button>
                                <span>
                                    @Html.ValidationMessage($"resetFailed{user.Id}", new { @class = "field-validation-error" })
                                </span>
                            </form>
                        </li>
                    }
                }
            </ul>
        </div>
    </div>